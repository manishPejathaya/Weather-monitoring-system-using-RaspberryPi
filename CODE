import RPi.GPIO as GPIO
import time
import datetime
from firebase import firebase
import Adafruit_DHT

import urllib2, urllib, httplib
import json
import os
from functools import partial

GPIO.setmode(GPIO.BCM)
GPIO.cleanup()
GPIO.setwarnings(False)

# Sensor should be set to Adafruit_DHT.DHT11,
# Adafruit_DHT.DHT22, or Adafruit_DHT.AM2302.
sensor = Adafruit_DHT.DHT11
sensor_p = BMP085.BMP085()
# Example using a Beaglebone Black with DHT sensor


# connected to pin P8_11.
pin = 4
pin_to_circuit = 17

GPIO.setup(23, GPIO.IN)
state = GPIO.input(23)

# Try to grab a sensor reading.  Use the read_retry method which will$
# to 15 times to get a sensor reading (waiting 2 seconds between each$
humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)
def rc_time (pin_to_circuit):
    count = 0
    #Output on the pin for
    GPIO.setup(pin_to_circuit, GPIO.OUT)
    GPIO.output(pin_to_circuit, GPIO.LOW)
    time.sleep(0.1)

    #Change the pin back to input
    GPIO.setup(pin_to_circuit, GPIO.IN)

    #Count until the pin goes high
    while (GPIO.input(pin_to_circuit) == GPIO.LOW):
        count += 1

    return count

#ldr= rc_time(pin_to_circuit)
#print ldr
#Catch when script is interrupted, cleanup correctly


firebase = firebase.FirebaseApplication('https://raspberrypi-8a865.firebaseio.com/',None)
def update_firebase():	
	humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)
        if humidity is not None and temperature is not None:
                time.sleep(5)
                str_temp = ' {0:0.2f} *C '.format(temperature)
                str_hum  = ' {0:0.2f} %'.format(humidity)
                #ldr = rc_time (pin_to_circuit)
                print('Temp={0:0.1f}*C  Humidity={1:0.1f}%'.format(temperature,humidity))
                ldr= rc_time(pin_to_circuit)
                print ldr
                detc="Water detected!"
                ndetc="Water not  detected!"

                if (state == 0):
                        print detc
                else:
                         print ndetc
		print 'Temp = {0:0.2f} *C'.format(sensor_p.read_temperature()) # Temperature in Celcius
print 'Pressure = {0:0.2f} Pa'.format(sensor_p.read_pressure()) # The local pressure
print 'Altitude = {0:0.2f} m'.format(sensor_p.read_altitude()) # The current altitude
print 'Sealevel Pressure = {0:0.2f} Pa'.format(sensor_p.read_sealevel_pressure()) # The sea-level pressure

        else:
                print('Failed to get reading. Try again!')
		sleep(10)

	data = {"temp": temperature, "humidity": humidity, "resistance": ldr}
        firebase.post('/sensor/dht', data)
while True:
                update_firebase()

                #sleepTime = int(sleepTime)
                time. sleep(5)
